{"meta":{"title":"Haoyu的博客","subtitle":"","description":"","author":"Haoyu","url":"https://g-haoyu.top","root":"/"},"pages":[{"title":"关于我","date":"2023-01-10T02:21:59.000Z","updated":"2024-01-11T08:23:55.109Z","comments":false,"path":"about/index.html","permalink":"https://g-haoyu.top/about/index.html","excerpt":"","text":"关于我基本信息在校学牲文章更新时间超级不稳定。"},{"title":"links_page","date":"2023-03-08T05:08:18.000Z","updated":"2023-03-08T05:09:34.000Z","comments":false,"path":"links-page/index.html","permalink":"https://g-haoyu.top/links-page/index.html","excerpt":"","text":""},{"title":"音乐库","date":"2023-03-10T12:14:51.000Z","updated":"2023-05-27T12:32:01.016Z","comments":false,"path":"music-box/index.html","permalink":"https://g-haoyu.top/music-box/index.html","excerpt":"","text":"var userId = \"8224741330\"; var userServer = \"netease\"; var userType = \"playlist\";"},{"title":"gallery","date":"2019-11-30T08:00:17.000Z","updated":"2023-01-29T10:31:34.000Z","comments":false,"path":"talk/index.html","permalink":"https://g-haoyu.top/talk/index.html","excerpt":"","text":"这里还在施工，你怎么进来的？"},{"title":"","date":"2023-05-27T08:22:16.971Z","updated":"2023-02-15T02:05:46.000Z","comments":false,"path":"photo/index.html","permalink":"https://g-haoyu.top/photo/index.html","excerpt":"","text":"Document 月亮 中秋节大大滴月亮 原图 树根 好奇怪的树根啊 原图 花 春天时拍的花 原图 大石头 山洞里的大石头！ 原图 山洞 长满了苔藓的石壁 原图 瀑布 镜泊湖的瀑布 原图 蓝天白云 忘了啥时候拍的 原图 又是山洞 很美啊 原图"}],"posts":[{"title":"网易云音乐歌曲信息爬取，包括标题、歌手、封面等","slug":"网易云音乐歌曲信息爬取，包括标题、歌手、封面等","date":"2024-02-05T05:37:43.000Z","updated":"2024-02-08T07:47:42.343Z","comments":true,"path":"2024/02/05/网易云音乐歌曲信息爬取，包括标题、歌手、封面等/","link":"","permalink":"https://g-haoyu.top/2024/02/05/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E6%9B%B2%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96%EF%BC%8C%E5%8C%85%E6%8B%AC%E6%A0%87%E9%A2%98%E3%80%81%E6%AD%8C%E6%89%8B%E3%80%81%E5%B0%81%E9%9D%A2%E7%AD%89/","excerpt":"","text":"实现目标：从网易云音乐爬取歌曲信息并写入下载的歌曲 分析浏览器中直接复制出来的链接与从客户端复制出来的链接有一点小小的区别， 12https://music.163.com/#/song?id=41643734（浏览器）https://music.163.com/song?id=41643734（客户端） 有”&#x2F;#”的链接爬取下来的内容因为套了一层iframe而没有歌曲信息，没有”&#x2F;#”的链接是原始的歌曲页面，内容中一些&lt;meta&gt;标签中有歌曲信息。 1234&lt;meta property=&quot;og:title&quot; content=&quot;Fireflies&quot; /&gt;&lt;meta property=&quot;og:image&quot; content=&quot;http://p1.music.126.net/dorTkbeN6ioIYOr1SwGRtA==/109951168167193142.jpg&quot; /&gt;&lt;meta property=&quot;og:music:artist&quot; content=&quot;Owl City&quot; /&gt;&lt;meta property=&quot;og:music:album&quot; content=&quot;OO&#x27;s Hits It&#x27;s Party Time&quot;/&gt; 爬取歌词api见以前的文章两个网易云音乐api先下载页面，再使用bs4筛选出来需要的歌曲信息(在&lt;meta&gt;标签的content属性中) 本人代码水平低，仅供参考 12345678910111213141516171819202122232425262728from bs4 import BeautifulSoupfrom requests import get,headfrom fake_useragent import UserAgent id = &#x27;41643734&#x27; # 链接中的idua = UserAgent()url = f&quot;https://music.163.com/song?id=&#123;id&#125;&quot; headers = &#123; &quot;User-Agent&quot;: ua.random,&#125; response = get(url=url,headers=headers) a = response.text bs = BeautifulSoup(a,&#x27;html.parser&#x27;)contents = []for i in bs.find_all(&#x27;meta&#x27;): # 搜索所有meta标签 try: i[&#x27;property&#x27;] # 筛选带有property属性 contents.append(i[&#x27;content&#x27;]) except: pass title = contents[1]artist = contents[9]album = contents[10]img_url = contents[3] 完整代码在爬取信息的基础上添加了下载歌曲、歌词、封面等信息并写入歌曲文件的功能 本人代码水平低，仅供参考 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121# 所有名为data的变量名都是想不出来名的的临时变量from bs4 import BeautifulSoupfrom requests import get,headfrom os.path import isdirfrom os import mkdirfrom shutil import copy from sys import argv,exitfrom eyed3 import loadfrom loguru import loggerfrom fake_useragent import UserAgenttrue = Truedef main(id,path=0): try: # 复制文件 if isdir(&#x27;output&#x27;): pass else: mkdir(&#x27;output&#x27;) ua = UserAgent() url = f&quot;https://music.163.com/song?id=&#123;id&#125;&quot; headers = &#123; &quot;User-Agent&quot;: ua.random, &#125; response = get(url=url,headers=headers) a = response.text bs = BeautifulSoup(a,&#x27;html.parser&#x27;) contents = [] for i in bs.find_all(&#x27;meta&#x27;): # 找到meta try: i[&#x27;property&#x27;] contents.append(i[&#x27;content&#x27;]) except: pass title = contents[1] artist = contents[9] album = contents[10] img_url = contents[3] save_name = f&#x27;&#123;title&#125; - &#123;artist&#125;&#x27;.replace(&#x27;/&#x27;,&#x27; &#x27;) # 防止多个歌手名中有斜杠导致无法保存文件 # 获取文件 if path: # 传入路径 copy(path,&#x27;output\\\\&#x27;+path.split(&#x27;\\\\&#x27;)[-1]) save_name = &#x27;&#x27; # 以下四行只是为了得到没有扩展名的歌曲文件名称 data = path.split(&#x27;\\\\&#x27;)[-1].split(&#x27;.&#x27;) del(data[-1]) for i in data: save_name += i else: logger.info(&#x27;下载音乐&#x27;) song_url = head(f&#x27;https://music.163.com/song/media/outer/url?id=&#123;id&#125;.mp3&#x27;,headers=headers).headers[&#x27;Location&#x27;] if song_url == &#x27;http://music.163.com/404&#x27;: logger.error(&#x27;无资源&#x27;) else: data = get(song_url) with open(&#x27;output\\\\&#x27;+save_name+&#x27;.mp3&#x27;,&#x27;wb&#x27;) as f: f.write(data.content) # 歌词 logger.info(&#x27;下载歌词&#x27;) data = get(&#x27;https://music.163.com/api/song/media?id=&#x27;+id).text try: lrc = eval(data)[&#x27;lyric&#x27;] with open(&#x27;output\\\\&#x27;+save_name+&#x27;.lrc&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) as f: f.write(lrc) except: logger.info(&#x27;无歌词&#x27;) logger.info(&#x27;下载封面&#x27;) data = get(img_url).content logger.info(f&#x27;&#x27;&#x27;-----歌曲信息-----歌曲名:&#123;title&#125;作曲家:&#123;artist&#125;专辑:&#123;album&#125;&#x27;&#x27;&#x27;) logger.info(&#x27;写入信息&#x27;) write_tags(save_name,title,artist,album,data) logger.success(&#x27;成功:&#x27;+&#x27;output\\\\&#x27;+save_name+&#x27;.mp3&#x27;) except Exception as e: logger.error(str(e)) def write_tags(save_name,title,artist,album,data): audioFile = load(path=&#x27;output\\\\&#x27;+save_name+&#x27;.mp3&#x27;) audioFile.tag.artist = artist audioFile.tag.title = title audioFile.tag.album = album audioFile.tag.images.set(3, data, &#x27;image/jpeg&#x27;, u&#x27;Cover&#x27;) audioFile.tag.save()try: data = argv[1] if len(argv) &gt; 2: path = argv[2] else: path = &#x27;&#x27;except Exception as e: logger.error(str(e)) print(f&#x27;用法:\\n&#123;argv[0]&#125; [网易云音乐歌曲id或url] [需要写入信息的歌曲文件路径(可选)]&#x27;) exit()try: id = str(int(data))except: try: id = data.split(&#x27;id=&#x27;)[1].split(&#x27;&amp;&#x27;)[0] except Exception as e: logger.error(str(e))logger.info(&#x27;id:&#x27;+id)main(id,path)","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://g-haoyu.top/tags/python/"},{"name":"网站","slug":"网站","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%AB%99/"}]},{"title":"23-12-08音乐推荐","slug":"23-12-03音乐推荐","date":"2023-12-08T09:56:11.000Z","updated":"2023-12-08T11:12:20.614Z","comments":true,"path":"2023/12/08/23-12-03音乐推荐/","link":"","permalink":"https://g-haoyu.top/2023/12/08/23-12-03%E9%9F%B3%E4%B9%90%E6%8E%A8%E8%8D%90/","excerpt":"","text":"","categories":[],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://g-haoyu.top/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"23/11/25音乐推荐","slug":"23-11-25音乐推荐","date":"2023-11-24T12:02:22.000Z","updated":"2023-11-25T08:34:30.445Z","comments":true,"path":"2023/11/24/23-11-25音乐推荐/","link":"","permalink":"https://g-haoyu.top/2023/11/24/23-11-25%E9%9F%B3%E4%B9%90%E6%8E%A8%E8%8D%90/","excerpt":"","text":"","categories":[],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://g-haoyu.top/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"抹茶蛋糕制作教程","slug":"抹茶蛋糕制作教程","date":"2023-10-04T08:22:08.000Z","updated":"2023-10-15T12:09:11.355Z","comments":true,"path":"2023/10/04/抹茶蛋糕制作教程/","link":"","permalink":"https://g-haoyu.top/2023/10/04/%E6%8A%B9%E8%8C%B6%E8%9B%8B%E7%B3%95%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B/","excerpt":"","text":"引入假期难得空闲，做个蛋糕玩玩 多图警告本篇文章图片较多，请注意流量 所需原料 鸡蛋 8个 砂糖 80g 低筋面粉（实测普通面粉也行） 100g 玉米油（实测豆油也行） 80g 牛奶 100g 盐 2g 抹茶粉 10g （可替换为可可粉，原味也可不加） 两个小时的时间 开始制作！步骤 1准备一个奶锅，倒入玉米油，加热至微沸 步骤 2将面粉过筛（这步可以跳过，但是过筛后口感更细腻）将冷却后的热油，盐和抹茶粉加入面粉拌匀 步骤 3如图，将7个蛋的蛋清蛋黄分离，分别放入两个碗中，再将一个全蛋放入7个蛋黄中 蛋清中不能混有蛋黄，混有蛋黄会导致无法打成湿性发泡，进而导致蛋糕不蓬松 步骤 4将牛奶倒入蛋黄中，搅拌均匀 步骤 5将第4步的鸡蛋糊倒入第2步的面糊中，搅拌均匀 步骤 6如图，用打蛋器将蛋清打至湿性发泡 步骤 7将第5步的面糊倒入第6步的蛋白霜，搅拌均匀 步骤 8 PS：可以在烤盘上垫一层吸油纸，可以更方便地分离蛋糕 在烘焙盘中均匀地刷上一层油，把蛋糕糊倒入烘焙盘中，轻震几下震出气泡，将烘焙盘放入装有水的托盘中（防止糊底） 步骤 9放入烤箱上下火170℃烤10分钟，转上下火150℃再烤40分钟。 步骤 10完成啦！展示一下 结尾做这个蛋糕糖放了不少。西点这个东西很神奇，放那么多糖还会给人很清新的感觉。","categories":[],"tags":[{"name":"日常","slug":"日常","permalink":"https://g-haoyu.top/tags/%E6%97%A5%E5%B8%B8/"}]},{"title":"【已解决】Cloudflare代理Vercel托管的网站重定向次数过多","slug":"【已解决】Cloudflare代理Vercel托管的网站重定向次数过多","date":"2023-09-30T08:26:16.000Z","updated":"2023-09-30T08:58:07.268Z","comments":true,"path":"2023/09/30/【已解决】Cloudflare代理Vercel托管的网站重定向次数过多/","link":"","permalink":"https://g-haoyu.top/2023/09/30/%E3%80%90%E5%B7%B2%E8%A7%A3%E5%86%B3%E3%80%91Cloudflare%E4%BB%A3%E7%90%86Vercel%E6%89%98%E7%AE%A1%E7%9A%84%E7%BD%91%E7%AB%99%E9%87%8D%E5%AE%9A%E5%90%91%E6%AC%A1%E6%95%B0%E8%BF%87%E5%A4%9A/","excerpt":"","text":"【已解决】Cloudflare代理Vercel托管的网站重定向次数过多引入前几天将域名的name server更改到Cloudflare，Cloudflare自动代理了域名下的网站，不久后邮件提醒网站已下线，显示 重定向次数过多 出现这个问题的原因是：Cloudflare在回源的过程中请求Vercel的服务器，Vercel的服务器自动启用了https，而Cloudflare默认的加密方式是http，这就导致https与http重定向时乱跳。 解决方法 一不使用Cloudflare代理 打开 DNS-记录找到如图所示的 代理状态将按钮拨到关闭状态即可 解决方法 二让Cloudflare以https的方式回源 打开 SSL&#x2F;TLS-概述找到如图所示的 SSL&#x2F;TLS 加密模式将其改为 完全 或 完全（严格）","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://g-haoyu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"网络","slug":"网络","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%BB%9C/"}]},{"title":"两个网易云音乐api","slug":"两个网易云音乐api","date":"2023-08-06T05:00:12.000Z","updated":"2024-02-08T07:50:00.978Z","comments":true,"path":"2023/08/06/两个网易云音乐api/","link":"","permalink":"https://g-haoyu.top/2023/08/06/%E4%B8%A4%E4%B8%AA%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90api/","excerpt":"","text":"两个网易云音乐api（歌曲下载及歌词）歌曲下载1https://music.163.com/song/media/outer/url?id=1387892225.mp3 注意，id后须有.mp3 参数： id：歌曲id 返回：即歌曲文件 歌词下载1https://music.163.com/api/song/media?id=1991332315 参数： id：歌曲id 返回：123456&#123; &quot;songStatus&quot;: 1, &quot;lyricVersion&quot;: 3, &quot;lyric&quot;: &quot;[00:00.39]虾塘 渔翁 日出而作\\n[00:05.53]烟雨 黑白 风水太极\\n[00:11.13]远山 大雾 心静自然\\n[00:16.50]海浪 海浪 流浪流浪\\n[00:28.05]\\n[00:28.94]斗笠下的阿bai（伯）说着南音\\n[00:33.47]没见过的浪漫 使我安然\\n[00:39.09]也算听过三两言 也算见过是非人\\n[00:44.61]也算过往南北路\\n[00:47.50]却总是自以为是 却总是不听他言\\n[00:52.37]\\n[00:54.77]走走走 在哪一站 遇见迷失的自己\\n[01:00.29]游游游 跳进山海 卸了阴霾的某\\n[01:05.71]你听见吗 你听到吗 你怕什么\\n[01:10.55]望着东海 留下秘密 许下愿望\\n[01:15.19]等我老时 再归来\\n[01:22.05]\\n[01:43.92]虾塘 渔翁 日出而作\\n[01:49.27]烟雨 黑白 风水太极\\n[01:54.72]远山 大雾 心静自然\\n[02:00.22]海浪 海浪 流浪流浪\\n[02:10.54]\\n[02:31.38]下雨了\\n[02:54.82]走走走 在哪一站 遇见迷失的自己\\n[03:00.26]游游游 跳进山海 卸了阴霾的某\\n[03:05.39]你听见吗 你听到吗 你怕什么\\n[03:10.42]望着东海 留下秘密 许下愿望\\n[03:15.22]等我老时 再归来\\n[03:22.27]\\n[03:22.95]编曲：卢笛\\n[03:24.11]录音：卢笛\\n[03:25.44]竖笛：卢笛\\n[03:26.84]吉他：卢笛\\n[03:28.13]混音：卢笛\\n[03:29.63]母带：Andrew Baldwin (London Metropolis Studio)\\n[03:31.49]Op：无糖音乐\\n[03:32.76]出品：裁缝铺厂牌\\n[03:38.43]封面：居麻油\\n[03:55.35]和音：居麻油 卢笛\\n&quot;, &quot;code&quot;: 200&#125; 其中 lyric 为返回的歌词 如果该歌曲没有歌词，则会返回 1234&#123; &quot;nolyric&quot;:true, &quot;code&quot;:200&#125;","categories":[],"tags":[{"name":"api","slug":"api","permalink":"https://g-haoyu.top/tags/api/"}]},{"title":"pywebview使用指南","slug":"pywebview使用指南","date":"2023-05-26T11:22:52.000Z","updated":"2023-06-08T11:23:50.877Z","comments":true,"path":"2023/05/26/pywebview使用指南/","link":"","permalink":"https://g-haoyu.top/2023/05/26/pywebview%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","excerpt":"","text":"pywebview 介绍根据官网介绍，pywebview 是一个轻量级的跨平台 GUI 框架，通过对 webview 组件包装来让 HTML 内容可以在平台对应的 GUI 上展示，可以把它想象成 Python 的 Electron ，不过它的体积要小得多。你可以用现代的 Web 开发技术来开发你的桌面应用，而无须关注原生平台的 GUI 细节。通过 pywebview ，可以选择你喜欢的 Python 轻量级 Web 框架如 Flask 或者 Bottle 来处理实际逻辑，由 pywebview 来负责 Python 和 DOM 之间的交互。 优点直接调用本机浏览器内核，打包体积不特别大。 使用安装1pip install pywebview 创建简单窗口1234import webviewwindow = webview.create_window(&#x27;Hello!&#x27;, &#x27;https://g-haoyu.top/&#x27;) # 直接显示指定网页webview.start() 调整窗口大小12345678def resize(window): window.resize(420, 420)if __name__ == &#x27;__main__&#x27;: window = webview.create_window(&#x27;Resize window example&#x27;, html=&#x27;&lt;h1&gt;重设大小&lt;/h1&gt;&#x27;, width=800, height=600) webview.start(resize, window) 更改网址123456789101112131415import webviewimport timedef change_url(window): # 等待两秒切换网址 time.sleep(2) # 切换网址 window.load_url(&#x27;https://cn.bing.com/search?q=2&#x27;) # 第二个网址if __name__ == &#x27;__main__&#x27;: window = webview.create_window(&#x27;Hello&#x27;, &#x27;https://cn.bing.com/search?q=1&#x27;) #第一个网址 webview.start(change_url, window) 对话框1234567891011121314import webviewdef open_confirmation_dialog(window): result = window.create_confirmation_dialog(&#x27;title&#x27;, &#x27;你好吗?&#x27;) if result: print(&#x27;点击了 确定&#x27;) else: print(&#x27;点击了 取消&#x27;)if __name__ == &#x27;__main__&#x27;: window = webview.create_window(&#x27;hello&#x27;, &#x27;https://g-haoyu.top/&#x27;) webview.start(open_confirmation_dialog, window) 退出时的确认对话框123456789101112import webviewchinese = &#123; &#x27;global.quitConfirmation&#x27;: u&#x27;确定关闭?&#x27;, &#125; # 设置语言if __name__ == &#x27;__main__&#x27;: webview.create_window(&#x27;hello&#x27;, &#x27;https://g-haoyu.top/&#x27;, confirm_close=True) webview.start(localization=chinese) 开启控制台12345import webviewif __name__ == &#x27;__main__&#x27;: webview.create_window(&#x27;Debug&#x27;, &#x27;https://g-haoyu.top/&#x27;) webview.start(debug=True) # 开启debug 右键单击某个元素，打开调试控制台。 销毁窗口12345678910111213141516import webviewimport timedef destroy(window): # 显示窗口5秒后销毁窗口 time.sleep(5) print(&#x27;销毁窗口..&#x27;) window.destroy() print(&#x27;已销毁&#x27;)if __name__ == &#x27;__main__&#x27;: window = webview.create_window(&#x27;Destroy&#x27;, &#x27;https://g-haoyu.top/&#x27;) webview.start(destroy, window) print(&#x27;窗口已被销毁&#x27;) 事件12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758import webviewimport timedef on_closed(): print(&#x27;窗口关闭&#x27;)def on_closing(): print(&#x27;窗口关闭中&#x27;)def on_shown(): print(&#x27;窗口显示&#x27;)def on_minimized(): print(&#x27;窗口最小化&#x27;)def on_restored(): print(&#x27;窗口还原&#x27;)def on_maximized(): print(&#x27;窗口最大化&#x27;)def on_loaded(): print(&#x27;DOM 加载完成&#x27;) # unsubscribe event listener webview.windows[0].events.loaded -= on_loaded webview.windows[0].load_url(&#x27;https://g-haoyu.top/&#x27;)def on_resized(width, height): print(&#x27;窗口大小更改为 &#123;width&#125; x &#123;height&#125;&#x27;.format(width=width, height=height))def on_moved(x, y): print(&#x27;窗口移动到 x: &#123;x&#125;, y: &#123;y&#125;&#x27;.format(x=x, y=y))if __name__ == &#x27;__main__&#x27;: window = webview.create_window(&#x27;hello&#x27;, &#x27;https://g-haoyu.top/&#x27;, confirm_close=True) window.events.closed += on_closed window.events.closing += on_closing window.events.shown += on_shown window.events.loaded += on_loaded window.events.minimized += on_minimized window.events.maximized += on_maximized window.events.restored += on_restored window.events.resized += on_resized window.events.moved += on_moved webview.start() 无框窗口12345678import webviewif __name__ == &#x27;__main__&#x27;: webview.create_window(&#x27;Frameless window&#x27;, &#x27;https://g-haoyu.top/&#x27;, frameless=True) webview.start() 可以通过拖动来移动窗口。官网上这样说的，但是亲测不能通过拖动来移动窗口。 全屏窗口12345678import webviewif __name__ == &#x27;__main__&#x27;: webview.create_window(&#x27;Full-screen window&#x27;, &#x27;https://g-haoyu.top/&#x27;, fullscreen=True) webview.start() 隐藏&#x2F;显示窗口123456789101112131415import webviewimport timedef hide_show(window): time.sleep(5) window.hide() time.sleep(5) window.show()if __name__ == &#x27;__main__&#x27;: window = webview.create_window(&#x27;Hide / show window&#x27;, &#x27;https://g-haoyu.top/&#x27;) webview.start(hide_show, window) 本地化123456789101112131415161718192021222324252627import webviewif __name__ == &#x27;__main__&#x27;: localization = &#123; &#x27;global.quitConfirmation&#x27;: u&#x27;你想退出吗？&#x27;, &#x27;global.ok&#x27;: u&#x27;确定&#x27;, &#x27;global.quit&#x27;: u&#x27;退出&#x27;, &#x27;global.cancel&#x27;: u&#x27;取消&#x27;, &#x27;global.saveFile&#x27;: u&#x27;保存文件&#x27;, &#x27;cocoa.menu.about&#x27;: u&#x27;关于&#x27;, &#x27;cocoa.menu.services&#x27;: u&#x27;服务&#x27;, &#x27;cocoa.menu.view&#x27;: u&#x27;显示&#x27;, &#x27;cocoa.menu.hide&#x27;: u&#x27;隐藏&#x27;, &#x27;cocoa.menu.hideOthers&#x27;: u&#x27;隐藏其他&#x27;, &#x27;cocoa.menu.showAll&#x27;: u&#x27;显示所有&#x27;, &#x27;cocoa.menu.quit&#x27;: u&#x27;退出&#x27;, &#x27;cocoa.menu.fullscreen&#x27;: u&#x27;进入全屏&#x27;, &#x27;windows.fileFilter.allFiles&#x27;: u&#x27;所有文件&#x27;, &#x27;windows.fileFilter.otherFiles&#x27;: u&#x27;其他文件类型&#x27;, &#x27;linux.openFile&#x27;: u&#x27;打开文件&#x27;, &#x27;linux.openFiles&#x27;: u&#x27;打开多个文件&#x27;, &#x27;linux.openFolder&#x27;: u&#x27;打开文件夹&#x27;, &#125; webview.create_window(&#x27;Localization Example&#x27;, &#x27;https://g-haoyu.top/&#x27;) webview.start(localization=localization) 更多请查看官网 结尾写这篇文章时还发现了一个类似项目Eel","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://g-haoyu.top/tags/python/"},{"name":"浏览器","slug":"浏览器","permalink":"https://g-haoyu.top/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"}]},{"title":"随手拍照","slug":"随手拍照","date":"2023-05-08T04:30:00.000Z","updated":"2023-05-21T08:08:38.000Z","comments":true,"path":"2023/05/08/随手拍照/","link":"","permalink":"https://g-haoyu.top/2023/05/08/%E9%9A%8F%E6%89%8B%E6%8B%8D%E7%85%A7/","excerpt":"","text":"直奔主题花终于开了，去公园拍些照片吧 就这些拿得出手，凑合看吧😊","categories":[],"tags":[{"name":"日常","slug":"日常","permalink":"https://g-haoyu.top/tags/%E6%97%A5%E5%B8%B8/"}]},{"title":"【3月5日】哦吼，B站崩了","slug":"【3月5日】哦吼，B站崩了","date":"2023-03-05T12:41:58.000Z","updated":"2023-03-05T12:47:18.000Z","comments":true,"path":"2023/03/05/【3月5日】哦吼，B站崩了/","link":"","permalink":"https://g-haoyu.top/2023/03/05/%E3%80%903%E6%9C%885%E6%97%A5%E3%80%91%E5%93%A6%E5%90%BC%EF%BC%8CB%E7%AB%99%E5%B4%A9%E4%BA%86/","excerpt":"","text":"写完新文章，打算刷刷B站，您猜怎么着？B站崩啦！","categories":[],"tags":[{"name":"日常","slug":"日常","permalink":"https://g-haoyu.top/tags/%E6%97%A5%E5%B8%B8/"}]},{"title":"小白安装obs有多难？","slug":"小白安装obs有多难？","date":"2023-03-05T12:08:56.000Z","updated":"2023-05-26T11:16:02.000Z","comments":true,"path":"2023/03/05/小白安装obs有多难？/","link":"","permalink":"https://g-haoyu.top/2023/03/05/%E5%B0%8F%E7%99%BD%E5%AE%89%E8%A3%85obs%E6%9C%89%E5%A4%9A%E9%9A%BE%EF%BC%9F/","excerpt":"","text":"这篇文章，我将扮演一个电脑小白体验下载并安装obs。 带有 “*” 字样的为作者吐槽 ！！注意！！这不是教程，这不是教程，这不是教程！不要按照以下方法安装obs，否则吃大亏别赖我！真正的obs官网在这里! 情境我是一个电脑小白， 我想下载一个用来直播推流和录屏的软件， 我听说obs这款软件很全能， 我打算在我的电脑上试试。 下载软件我打开了全球最大的中文搜索引擎——百度搜索，*全是广告在输入框中填入了“obs录屏软件下载”*错误的关键字搜索引擎给了我如下的内容。*放眼望去，所有能看见的条目都不是真正的obs官网我点击了最炸眼，最醒目的一条“obs免费版-obs studio直播录屏中文版下载-一键安装” 我进入了obs官网，点击了“立即下载”按钮，并打开了安装包 *域名一眼假 下载软件我点击了“立即安装”*欸，介是嘛呀 就这样，我付了48软妹币，开始安装 *亏大发了啊！…… 最后总结这是我朋友的亲身经历，花了48软妹币，肠子都悔青了。 obs是自由免费的，一切收费的obs都是假的。 别想靠换搜索引擎来解决广告问题，国内主流搜索引擎都有这个问题（除非你能用谷歌） 最好的方法是安装一个广告屏蔽插件。 如果有能力，尽量学习辨别广告，在广告堆里找到官网。 这些都是假的 真正的obs官网在这里","categories":[],"tags":[{"name":"网站","slug":"网站","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%AB%99/"}]},{"title":"做了一款马鸥GPU占用指示器。占用越高，摇得越快。","slug":"做了一款马鸥GPU占用指示器。占用越高，摇得越快。","date":"2023-02-09T23:51:33.000Z","updated":"2023-08-24T06:15:05.588Z","comments":true,"path":"2023/02/10/做了一款马鸥GPU占用指示器。占用越高，摇得越快。/","link":"","permalink":"https://g-haoyu.top/2023/02/10/%E5%81%9A%E4%BA%86%E4%B8%80%E6%AC%BE%E9%A9%AC%E9%B8%A5GPU%E5%8D%A0%E7%94%A8%E6%8C%87%E7%A4%BA%E5%99%A8%E3%80%82%E5%8D%A0%E7%94%A8%E8%B6%8A%E9%AB%98%EF%BC%8C%E6%91%87%E5%BE%97%E8%B6%8A%E5%BF%AB%E3%80%82/","excerpt":"","text":"做了一款马鸥GPU占用指示器。占用越高，摇得越快。灵感来源：做了一款只因CPU占用指示器，占用越低 舞越快素材来源：【流浪地球】夜の踊り马兆 介绍 晓晞啊，这是海鸥吗?我也没太见过，看样子应该是…咱们北京航天局的马主任！ 看了小破球，又看到网友的二创，发现了个神奇的东西–马鸥正好最近看见了 做了一款只因CPU占用指示器，占用越低舞越快 这条视频。欸，那我也做一个。效果如图 上代码！12345678910111213141516171819202122232425262728293031323334353637383940414243import pynvmlfrom tkinter import *from pywin10 import TaskBarIconfrom sys import exitwindow = Tk()with open(&#x27;settings.txt&#x27;, &#x27;r&#x27;) as f: data = f.read().split(&#x27;\\n&#x27;) # 显卡号及gif名def get_speed(): pynvml.nvmlInit() handle = pynvml.nvmlDeviceGetHandleByIndex(int(data[0])) # 指定显卡号 meminfo = pynvml.nvmlDeviceGetMemoryInfo(handle) all = meminfo.total/1024 # 获取全部显存(单位kb) use = meminfo.used/1024 # 获取已用显存(单位kb) speed = use/all*100 # 算出已用百分之几 return round(speed)def update(idx): global g speed = 100-get_speed() # 占用越高间隔越快 print(speed) frame = frames[idx] idx += 1 # 下一帧的序号：在0~9之间循环(共10帧) g.configure(image=frame) # 刷新图片 window.after(speed, update, idx % numIdx)numIdx = int(data[2]) # gif的帧数frames = [PhotoImage(file=data[1], format=&#x27;gif -index %i&#x27; % (i)) for i in range(numIdx)]task = TaskBarIcon(icon=&quot;ico.ico&quot;, hover_text=&#x27;MGPU&#x27;, menu_options=[[&#x27;退出&#x27;, None, lambda: exit(0), 0]])window.wm_attributes(&quot;-transparentcolor&quot;, &quot;snow&quot;) # 背景透明g = Label(window, text=&#x27;--&#x27;, background=&#x27;snow&#x27;)g.pack()window.overrideredirect(True) # 无边框window.geometry(&#x27;240x240+0+0&#x27;) # 为什么置顶后+0+0失效呢？window.attributes(&#x27;-topmost&#x27;, True) # 置顶window.after(0, update, 0) # 开始updatewindow.mainloop() settings.txt是干啥用的1230MaZhao.gif10 第一行是显卡号，可以在“任务管理器”中查看（指定核心显卡或是独立显卡）。第二行是gif文件，你可以用自定义的gif，但是必须更改第三行的内容。第三行是gif的总帧数，更改gif后请根据你gif的帧数更改这行。 打包好的 我使用pyinstaller打包，打包后文件较大。杀毒软件会误报，如果不放心可自行安装python运行上面的代码！ 关闭方法：在系统托盘里右键点击MGPU退出 本站下载zip直连下载链接 Haoyu网盘下载Haoyu网盘分享链接网盘挂掉了╯︿╰","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://g-haoyu.top/tags/python/"}]},{"title":"在电脑上使用手机麦克风，简单！(超级详细)","slug":"在电脑上使用手机麦克风，简单！(超级详细)","date":"2023-02-01T20:14:47.000Z","updated":"2023-05-26T11:16:24.000Z","comments":true,"path":"2023/02/02/在电脑上使用手机麦克风，简单！(超级详细)/","link":"","permalink":"https://g-haoyu.top/2023/02/02/%E5%9C%A8%E7%94%B5%E8%84%91%E4%B8%8A%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E9%BA%A6%E5%85%8B%E9%A3%8E%EF%BC%8C%E7%AE%80%E5%8D%95%EF%BC%81(%E8%B6%85%E7%BA%A7%E8%AF%A6%E7%BB%86)/","excerpt":"","text":"在电脑上使用手机麦克风台式机一般不会自带麦克风，可是有时急需麦克风怎么办呢？一台手机就可以解决！ 教程下载软件 请放心，手机端软件不需要Google Play，官网也没被墙，可以正常访问并下载 打开官网下载地址 下载安卓平台软件你需要点击箭头所指的超链接，不通过Google Play下载 下载Windows平台软件安装运行环境（除非你安装过它）VC runtime re-distributable (x86)。 接下来，如图点击这个超链接 软件安装过程省略不要说我不详细，这应该都会吧 配置软件打开手机的WO MicWindows的WO Mic Client 数据线连接1.将usb数据线连接手机和电脑2.打开手机的“usb调试”（要我帮你搜索一下吗？（打开手机的“usb调试））3.将电脑端与手机端的链接方式改为”USB”4.分别启动手机端和电脑端的服务 蓝牙连接1.打开手机与电脑的蓝牙2.将手机与电脑连接3.将电脑端与手机端的链接方式改为”蓝牙”4.分别启动手机端和电脑端的服务 Wi-Fi连接1.将电脑与手机连接同一个Wi-Fi（电脑连手机热点也行）2.将电脑端与手机端的链接方式改为”Wi-Fi”3.先查看手机的”状态栏”，右侧的第二行会显示手机的ip地址，将它填入电脑端”建立连接”界面中的”手机ip地址”中。4.分别启动手机端和电脑端的服务 放在最后官网也提供了Linux的下载，没有图形界面，这是官方文档 WO Mic for Linux","categories":[],"tags":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://g-haoyu.top/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}]},{"title":"魔百盒m201-d安装armbian系统","slug":"魔百盒m201-d安装debian系统","date":"2023-01-25T14:05:55.000Z","updated":"2023-06-27T11:11:22.667Z","comments":true,"path":"2023/01/25/魔百盒m201-d安装debian系统/","link":"","permalink":"https://g-haoyu.top/2023/01/25/%E9%AD%94%E7%99%BE%E7%9B%92m201-d%E5%AE%89%E8%A3%85debian%E7%B3%BB%E7%BB%9F/","excerpt":"","text":"魔百盒m201-d安装armbian系统到手一台魔百盒，型号是m201-d，想装上armbian当服务器用(听说功耗挺小的) 注意本教程不保证一定成功以下命令有一些需根据自己硬件情况适当修改如果刷坏变砖请尝试救砖，不要发布不当言论，这样不会解决任何问题 1 准备材料魔百盒x1网线x1大于4G的U盘x1 (一会要格式化)能用的电脑x1 （下载镜像什么的） 2 准备工作2.1 刷安卓固件若可以使用adb安装.apk文件，请跳过此步 在网上搜教程，刷安卓固件。我用的这篇教程 2.2 安装Reboot to LibreELEC用adb安装Reboot_to_LibreELEC 2.3查看芯片小心地拆开盒子（一定要小心，本人在拆的过程中成功磕掉一颗LED灯，还好不影响使用），可以看见这些东西 主芯片 电源开关 电源接口 AV HDMI视频接口 网线接口 光线音频接口 usb2.0 tf卡插槽 usb2.0 我们放大一下主芯片看见主芯片型号为“S905L” 3 刷入armbian3.1 下载armbian打开这个链接，选择一个适合你的芯片的固件下载。如果下载太慢可以用GitHub Proxy加速下载，IDM能跑满12MB&#x2F;s。 3.2 刷入U盘下载一个balena-etcher,将下载的固件刷入U盘 注意这会格式化你的U盘 如果你的U盘有很大空闲空间，你也可以用DiskGenius扩容。 注意，扩容的是ROOTFS分区，不是BOOT分区。 3.3 修改配置文件重要的一步打开BOOT分区依次打开dtb和amlogic文件夹，找到符合你的电视盒子芯片和型号的文件（例如meson-gxl-s905x-p212.dtb），将文件名复制下来打开BOOT分区根目录下的uEnv.txt，将文件名粘贴到”FDT&#x3D;&#x2F;dtb&#x2F;amlogic&#x2F;“后面，例如 1234LINUX=/zImageINITRD=/uInitrdFDT=/dtb/amlogic/meson-gxl-s905x-p212.dtbAPPEND=root=UUID=33dfc49b-e1f1-4b2d-8b95-4dfd62c5dac3 rootflags=data=writeback rw rootfstype=ext4 console=ttyAML0,115200n8 console=tty0 no_console_suspend consoleblank=0 fsck.fix=yes fsck.repair=yes net.ifnames=0 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1 3.4 重启把U盘插入魔百盒，启动刚刚安装的Reboot to LibreELEC，点击”yes”，魔百盒重启。先黑屏一会，就可以看见在滚Linux启动的输出了。 4 debian配置4.1 用户设置刚开机会让你登录，用户名是root，密码是1234。登陆成功后会让你重新设置root的密码。还会让你创建一个新用户（非root）。 4.2 镜像源设置这里可以在另一台设备上用ssh连接它，以便输入镜像源在控制台输入 1ssh &lt;armbian上的用户名&gt;@&lt;armbian的ip&gt; 用另一台设备打开Debian 镜像使用帮助-清华大学开源软件镜像站 在arbian上登录刚刚创建的用户，输入 1sudo cat /etc/issue 查看当前使用的debian版本例如”bullseye”通过另一台设备上的Debian 镜像使用帮助-清华大学开源软件镜像站，修改镜像源。 debian基本配置完毕 不足之处什么？这不是饼干，这是……你说可以脱离U盘启动吗？我试了这些命令。 1234567sudo nand-sata-installarmbian-installsudo sh /root/install.shsudo sh /root/install-2018.sh 以及网上的各种方法，没有一个好使的，不是开机变砖，就是出各种错误。感兴趣的的话可以自己研究研究。 23&#x2F;06&#x2F;27更新可以直接将系统烧录在sd卡中，即可脱离u盘启动。 这个小玩意还是有些用处的，例如在上面部署twikoo评论后端或者Cloudreve自建网盘，运行这些毫无压力。可以使用ipv6连接，再加上个免费HTTPS证书，岂不美哉 本人用它自建的网盘haoyu.pan","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://g-haoyu.top/tags/linux/"},{"name":"服务器","slug":"服务器","permalink":"https://g-haoyu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"农历新年快乐！","slug":"农历新年快乐！","date":"2023-01-21T16:00:00.000Z","updated":"2023-05-26T11:17:36.000Z","comments":true,"path":"2023/01/22/农历新年快乐！/","link":"","permalink":"https://g-haoyu.top/2023/01/22/%E5%86%9C%E5%8E%86%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90%EF%BC%81/","excerpt":"","text":"新年快乐！现在是2023年，1月22日，0点。农历兔年来了，新的一年到来了！我整整熬了一年啊，我要睡觉了！","categories":[],"tags":[{"name":"日常","slug":"日常","permalink":"https://g-haoyu.top/tags/%E6%97%A5%E5%B8%B8/"}]},{"title":"Arch安装踩坑记","slug":"Arch安装踩坑记","date":"2023-01-18T10:27:19.000Z","updated":"2023-05-26T11:21:24.000Z","comments":true,"path":"2023/01/18/Arch安装踩坑记/","link":"","permalink":"https://g-haoyu.top/2023/01/18/Arch%E5%AE%89%E8%A3%85%E8%B8%A9%E5%9D%91%E8%AE%B0/","excerpt":"","text":"Arch安装踩坑记哇，网上的教程真是让我大开眼界啊，有好多错误，坑一个比一个多，我也一个接一个踩。花了两天，整整两天啊(x_x)最后终于整理出了一个完美无瑕至少在我的电脑上可以使用的教程。注意，本教程仅适用于使用UEFI启动、插网线的机器 安装前必读！！！ ！！安装前必读！！如果你不懂”&#x2F;dev&#x2F;sda1”代表着什么，我劝你不要读这篇文章，更不要照着这篇文章在实体机上安装Arch。下面有许多命令后面带括号（），这意味着这条命令有需要根据自己硬件情况修改的地方，不能直接往上用如果你照着这篇文章在实体机上安装Arch操作失误导致数据丢失，与我无关。别怪我没提醒你哦！ 1.被跳过的步骤下载镜像、制作启动盘省略 2.live环境中的操作2.1同步时间（需联网）输入 1timedatectl set-ntp true 2.2修改软件源输入找到”China”，并排在最前面 1vim /etc/pacman.d/mirrorlist 这里不得不说一下vim的简单使用方法命令模式下：按下”i”键: 进入插入模式，可以输入文字（退出按 ESC）按下”v”键: 键盘上下键，选中多行按下”d”键: 剪切按下”p”键: 粘贴保存则需要在命令模式下按”:”（冒号），输入”wq”（w代表写入，q代表退出），按下”Enter”（回车）就是依次按下”:wq 回车” 2.3磁盘分区多硬盘情况查看硬盘情况输入 1fdisk -l 理论上会输出 1234567891011Disk /dev/sda: 60 GIB, 64424509440 bytes, 125829120 sectorsDisk model: 乱七八糟的Units: 还是乱七八糟的Sector size -------------------------I/O size -------------------------Disk /dev/sdb: 120 GIB, -------------- bytes, -------------- sectorsDisk model: 乱七八糟的Units: 还是乱七八糟的Sector size -------------------------I/O size ------------------------- 这样的东西，选择一个你将要安装Arch的硬盘，比如说 “&#x2F;dev&#x2F;sda”然后输入 1cfdisk /dev/sda （这里是刚才选的要安装Arch的硬盘） 出现了一个图形化(?)界面这里按一下”Enter”键在这个界面下当上面选中”&gt;&gt;&gt; Free space”时，下面选中”[ New ]”，并按下回车。下面显示 1Partition size: 60G 将”60G”改为”512M”，按下回车，就创建完了一个分区再这样创建三个分区，四个分区的大小分配大概是这样的 分区 分配大小 作用 介绍 分区一 512M 用作启动分区 刚刚创建完，是启动分区 分区二 物理内存的 1~2 倍 用作交换分区 内存不足时把这个分区当内存用 分区三 自己看着来 用作根目录 所有的软件包都会装在这里 分区四 自己看着来 用作&#x2F;home目录 所有的个人文件都在这里 怎么退出？ 先别着急，现在退出只会让你前功尽弃如图，把下面的光标对准”[ write ]”，并按下回车保存分区表，再输入”yes”并回车最后把下面的光标对准”[ Quit ]”，并按下回车退出cfdisk。 好的，你可以”空降”到格式化了 单硬盘情况输入 1cfdisk /dev/sda （这里是刚才选的要安装Arch的硬盘） 出现了一个图形化(?)界面这里按一下”Enter”键在这个界面下当上面选中”&gt;&gt;&gt; Free space”时，下面选中”[ New ]”，并按下回车。下面显示 1Partition size: 60G 将”60G”改为”512M”，按下回车，就创建完了一个分区再这样创建三个分区，四个分区的大小分配大概是这样的 分区 分配大小 作用 介绍 分区一 512M 用作启动分区 刚刚创建完，是启动分区 分区二 物理内存的 1~2 倍 用作交换分区 内存不足时把这个分区当内存用 分区三 自己看着来 用作根目录 所有的软件包都会装在这里 分区四 自己看着来 用作&#x2F;home目录 所有的个人文件都在这里 怎么退出？ 先别着急，现在退出只会让你前功尽弃如图，把下面的光标对准”[ write ]”，并按下回车保存分区表，再输入”yes”并回车最后把下面的光标对准”[ Quit ]”，并按下回车退出cfdisk。 2.4格式化输入 1fdisk -l （这是小写&quot;L&quot;） 会输出 对应着你自己的表格，分别用 1mkfs.fat -F32 /dev/sda1 （sda1对应着启动分区） 格式化启动分区； 用 12mkswap /dev/sda2 （sda2对应着交换分区）swapon /dev/sda2 （sda2对应着交换分区） 格式化并启用交换分区； 用 12mkfs.ext4 /dev/sda3 （sda3对应着用作根目录的分区）mkfs.ext4 /dev/sda4 （sda4对应着用作/home目录的分区） 分别格式化用作根目录、用作&#x2F;home目录的分区。 2.5挂载目录12345mount /dev/sda3 /mnt （sda3对应着用作根目录的分区）mkdir /mnt/homemkdir /mnt/bootmount /dev/sda4 /mnt/home （sda4对应着用作/home目录的分区）mount /dev/sda1 /mnt/boot （sda1对应着启动分区） 不要变顺序！ 2.6安装系统和基础软件啊啊啊，相信看到这里的你一定很有耐心呀！ 系统包括base base-devel linux linux-firmware基础软件包括dhcpcd iwd vim sudo bash-completion nano net-tools openssh man git wget zsh fish 输入 1pacstrap /mnt base base-devel linux linux-firmware dhcpcd iwd vim sudo bash-completion nano net-tools openssh man git wget zsh fish 够它跑一会了，喝口水，上趟厕所吧。（欸，我还真上了厕所(。・ω・。)） 2.7生成fstab输入 1genfstab -U /mnt &gt;&gt; /mnt/etc/fstab 3.装好系统后的操作3.1进入系统输入 1arch-chroot /mnt 切换到刚安装的系统内 3.2配置网络输入 1vim /etc/hostname 取一个好听的hostname，填在里面 编辑hosts输入 1vim /etc/hosts 添加 123127.0.0.1 localhost::1 localhost127.0.1.1 ghyuav （刚刚取完的一个好听的hostname，我取的是&quot;ghyuav&quot;） vim用法上面已经提到过了，还不明白可以上网搜或者用”nano”(反正我刚才留了一手，安装基础软件时安装了”nano”) 3.3本地化3.3.1设置时区、硬件时间12ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimehwclock --systohc 3.3.2设置语言1vim /etc/locale.gen 分别把#en_US.UTF-8.UTF-8#zh_CN.UTF-8.UTF-8前面的”#”去掉然后保存并退出 使语言环境生效 12locale-genecho &#x27;LANG=en_US.UTF-8&#x27; &gt; /etc/locale.conf 千万不要耍小聪明，既然有en_US，那我换成zh-CN不就有中文了吗？那么做的结果只会使中文变成小方块 3.4设置镜像源输入 1vim /etc/pacman.conf 然后删掉[multilib]这几行前的”#”，在末尾添加以下两行： 12[archlinuxcn]Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch 保存并退出 3.5设置用户3.5.1设置管理员密码1passwd root 输入两遍密码，不会有显示 3.5.2添加新用户1useradd -m -G wheel -s /bin/bash ghyuav （&quot;ghyuav&quot;可改成其他名字） 设置密码 1passwd ghyuav （&quot;ghyuav&quot;是刚才添加的用户名） 3.5.3编辑权限编辑ghyuav用户的权限 1EDITOR=vim visudo 找到”# %wheel ALL&#x3D;(ALL:ALL)ALL”删除前面的”# “ 3.6安装cpu解码软件和GRUB1pacman -Sy intel-ucode grub efibootmgr os-prober （这里是intel的cpu，如果是amd的，请把&quot;intel-ucode&quot;替换为&quot;amd-ucode&quot;） 安装grub 1grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB 生成grub 1grub-mkconfig -o /boot/grub/grub.cfg 3.7安装一堆软件、字体，设置开机启动vmware可以装 1pacman -S gtkmm gtk2 gtkmm3 open-vm-tools xf86-input-vmmouse xf86-video-vmware 安装一堆软件、字体，设置开机启动 123456pacman -S plasma konsole dolphin （安装桌面、终端模拟器、文件管理器）pacman -S ntfs-3g （可以读取ntfs格式磁盘 实体机上推荐安装）pacman -S os-prober （查找已安装的操作系统 实体机上推荐安装）pacman -S adobe-source-han-serif-cn-fonts adobe-source-han-sans-cn-fonts wqy-zenhei wqy-microhei noto-fonts-cjk noto-fonts-emoji noto-fonts-extra ttf-dejavu （安装各种字体）pacman -S firefox ark gwenview packagekit-qt5 packagekit appstream-qt appstream man neofetch net-tools networkmanager openssh git wget（安装常用软件）systemctl enable NetworkManager sddm vmtoolsd sshd （启动系统服务） 仅适用于VMware虚拟机的操作1sudo vim /etc/mkinitcpio.conf添加以下内容1MODULES=(vsock vmw_vsock_vmci_transport vmw_balloon vmw_vmci vmwgfx)保存并退出 生效配置文件 1mkinitcpio -p linux 输入 1exit 回到live环境，卸载本机的&#x2F;mnt目录 1umount -R /mnt 最后reboot重启 大功告成！！大功告成最终效果放出来： 我去，不知不觉写这么多，花了两天半，踩各种坑，虚拟机安一遍，实体机安一遍，可算是整完了 待完善……","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://g-haoyu.top/tags/linux/"},{"name":"Arch","slug":"Arch","permalink":"https://g-haoyu.top/tags/Arch/"}]},{"title":"简易git配置教程","slug":"简易git配置教程","date":"2023-01-16T04:26:07.000Z","updated":"2023-05-26T11:14:28.000Z","comments":true,"path":"2023/01/16/简易git配置教程/","link":"","permalink":"https://g-haoyu.top/2023/01/16/%E7%AE%80%E6%98%93git%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/","excerpt":"","text":"git配置过程简易的git配置教程 下载git官网就不指望了，我曾经试了一下，用浏览器下载了一整天都没下载完（其实就刚开始几分钟有速度，到后来就变成0B&#x2F;s了）直接用镜像吧：Git下载链接安装过程一路确认就行详细安装方法可以参考这篇文章 设置用户名、邮箱打开 Git Bash输入 12git config --global user.name Ghyuav (github用户名)git config --global user.email ghyuav2021@163.com (github绑定的邮箱) 设置ssh输入 1ssh-keygen -t rsa -C &#x27;ghyuav2021@163.com&#x27; (github绑定的邮箱) 无脑按三下Enter键。当出现 1234567891011+---[RSA 3072]----+| || || ||*乱七八糟的东西 || || || || || |+----[SHA256]-----+ 时，在你的用户文件夹下 找到&#x2F;.ssh目录，打开”id_rsa.pub”并复制里面的所有内容打开你github的个人设置，点击侧边栏中的”SSH and GPG keys”，在右边的”SSH keys”中点击”New SSH key”，把刚刚的公钥粘贴进来，然后点击”Add SSH key”添加公钥。 初始化在本地目录下打开Git Bash，输入 1git init 选择现有远程仓库输入 1git remote set-url origin https://github.com/Ghyuav/ghyuav.github.io.git (你的远程仓库地址) 完成……了吗？push时出现了一个奇怪错误： 1fatal: unable to access &#x27;https://github.com/Ghyuav/ghyuav.github.io.git/&#x27;: SSL certificate problem: unable to get local issuer certificate 解决：需要解除SSL验证，再重新执行克隆或者其他操作。输入 1git config --global http.sslVerify false 立刻见效。","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://g-haoyu.top/tags/git/"}]},{"title":"Winodws UEFI引导修复","slug":"WinodwsUEFI引导修复","date":"2023-01-13T01:52:22.000Z","updated":"2023-07-28T11:09:07.524Z","comments":true,"path":"2023/01/13/WinodwsUEFI引导修复/","link":"","permalink":"https://g-haoyu.top/2023/01/13/WinodwsUEFI%E5%BC%95%E5%AF%BC%E4%BF%AE%E5%A4%8D/","excerpt":"","text":"Winodws UEFI引导修复这两天闲着没事，在实体机上装Ubuntu双系统，用了一个残次品U盘当启动盘，刚开始还好好的呢，突然就挂了，grub把Windows Boot Manager覆盖了，Ubuntu还没装完，一重启，好家伙，哪个系统都进不去。在网上搜了好长时间，整理出了这个方法。（懒得重装系统，还有，不要用残次品U盘！） 修复方法 注意，本操作可以在PE系统中进行 1.准备一个U盘（大于8G），并制作启动盘。2.U盘启动时多次强制重启打断启动，过几次会自动进入到系统修复界面3.依次点击 疑难解答-高级选项-命令提示符输入以下命令 12diskpartlist vol 会输出 12345678910DISKPART&gt; list vol 卷 ### LTR 标签 FS 类型 大小 状态 信息 ---------- --- ----------- ----- ---------- ------- --------- -------- 卷 0 D NTFS 磁盘分区 931 GB 正常 卷 1 E NTFS 磁盘分区 111 GB 正常 卷 2 FAT32 磁盘分区 512 MB 正常 系统 卷 3 C 新加卷 NTFS 磁盘分区 476 GB 正常 启动 卷 4 G wepe exFAT 可移动 28 GB 正常 卷 5 F 新加卷 NTFS 磁盘分区 1863 GB 正常 可见，”卷 2”是EFI分区（EFI分区一般大小只有几百MB，文件系统一般为FAT32且在系统盘上） 接下来输入以下命令 12345678select volume x (x是刚才的EFI分区卷号，例如：2)assign letter=J (z是给EFI分区分配一个盘符，要从这里创建启动文件)exit (退出DISKPART)cd /d J:\\EFI\\Microsoft\\Boot\\ (J是刚才给EFI分区分配的盘符)bootrec/fixbootren BCD BCD.bakbcdboot C:\\Windows /l zh-cn /s J: /f ALL (C:是Windows所在的盘符，J:是刚才给EFI分区分配的盘符)bootrec /rebuildbcd “&#x2F;l”是小写“L”！命令执行完后重启，拔出启动盘，你会发现Winodws UEFI引导修复了，成功进入系统。","categories":[],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://g-haoyu.top/tags/Ubuntu/"},{"name":"Windows","slug":"Windows","permalink":"https://g-haoyu.top/tags/Windows/"}]},{"title":"hexo-fluid免费部署评论功能","slug":"hexo-fluid部署评论功能","date":"2023-01-11T23:48:04.000Z","updated":"2023-05-26T11:18:24.000Z","comments":true,"path":"2023/01/12/hexo-fluid部署评论功能/","link":"","permalink":"https://g-haoyu.top/2023/01/12/hexo-fluid%E9%83%A8%E7%BD%B2%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/","excerpt":"","text":"hexo-fluid免费部署评论功能giscusgiscus是一个由 GitHub Discussions 驱动的评论系统，部署方便，无跟踪，无广告，永久免费。无需数据库。全部数据均储存在 GitHub Discussions 中。 首先，要在你的github中安装giscus app点击”install”即可 然后如图依次点击”Only select repositories”和”Select repositories”,并选择你存储评论的仓库。点击”install”安装 打开giscus官网，进一步配置找到 配置-仓库填入仓库 如果提示”无法在此仓库上使用 giscus。请确保以上条件均已满足。“你需要确保此仓库是公开的Discussions功能已在你的仓库中启用。 启用Discussions功能的方法：在你的仓库中点击”Settings”，找到”General-Features”,并启用”Discussions” 接下来回到giscus官网，填入仓库当显示”成功！此仓库满足所有条件。“时，如图配置”页面 ↔️ discussion 映射关系”、”Discussion 分类”(“特性”、”主题”根据个人喜好配置)最后在”启用 giscus”中将对应的 repo repo-id category category-id mapping input-position lang 分别填入_config.yml中giscus插件的必要参数并在_config.yml中启用评论插件 最终效果如下","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://g-haoyu.top/tags/hexo/"},{"name":"giscus","slug":"giscus","permalink":"https://g-haoyu.top/tags/giscus/"}]},{"title":"Ubuntu22.10中腾讯会议不支持wayland协议解决方法","slug":"Ubuntu22-10中腾讯会议不支持wayland协议解决方法","date":"2023-01-11T01:45:35.000Z","updated":"2023-05-26T11:18:34.000Z","comments":true,"path":"2023/01/11/Ubuntu22-10中腾讯会议不支持wayland协议解决方法/","link":"","permalink":"https://g-haoyu.top/2023/01/11/Ubuntu22-10%E4%B8%AD%E8%85%BE%E8%AE%AF%E4%BC%9A%E8%AE%AE%E4%B8%8D%E6%94%AF%E6%8C%81wayland%E5%8D%8F%E8%AE%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","excerpt":"","text":"Ubuntu22.10中腾讯会议不支持wayland协议解决方法 网上一种不可行方法，正确方法在这里 这个方法为不可行方法，至少在我电脑上不可行，可行方法在这里 ubuntu关闭wayland 1sudo vim /etc/gdm3/custom.conf 把 #WaylandEnable&#x3D;false 的注释井号去掉 1sudo service gdm3 restart 作者：玉冷佩丁东链接：https://www.zhihu.com/question/538842265/answer/2652565788来源：知乎 这种方法只会让我的屏幕发黄发亮晃瞎我的眼（别问我为什么没有图，截图截不出那效果） 可行方法其实很简单第一步，先注销第二步，在输入密码界面点击“小齿轮”然后点击“Ubuntu on Xorg”接下来登入后你会发现，腾讯会议可以打开了就是这么简单","categories":[],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://g-haoyu.top/tags/Ubuntu/"},{"name":"腾讯会议","slug":"腾讯会议","permalink":"https://g-haoyu.top/tags/%E8%85%BE%E8%AE%AF%E4%BC%9A%E8%AE%AE/"},{"name":"linux","slug":"linux","permalink":"https://g-haoyu.top/tags/linux/"}]},{"title":"木鱼-修身养性","slug":"木鱼-修身养性","date":"2023-01-10T12:10:26.000Z","updated":"2023-05-26T11:14:54.000Z","comments":true,"path":"2023/01/10/木鱼-修身养性/","link":"","permalink":"https://g-haoyu.top/2023/01/10/%E6%9C%A8%E9%B1%BC-%E4%BF%AE%E8%BA%AB%E5%85%BB%E6%80%A7/","excerpt":"","text":"敲木鱼介绍 木鱼是一种法器，多用于佛教、道教的功课与法会。相传鱼昼夜不合目，故刻木像鱼形，击之以警戒僧众应昼夜思道。形制有二：一为挺直鱼形，用来粥饭或集众、警众，悬挂在寺院走廊上。二为圆状鱼形，诵经时所用，放在案上。明、清以来，民间音乐和潮剧、粤剧中常用到木鱼。使木鱼除法器外兼具乐器功能。这是一个电子木鱼 来敲电子木鱼！点击黑圆以开始全屏纯享","categories":[],"tags":[{"name":"木鱼","slug":"木鱼","permalink":"https://g-haoyu.top/tags/%E6%9C%A8%E9%B1%BC/"},{"name":"小游戏","slug":"小游戏","permalink":"https://g-haoyu.top/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"}]},{"title":"内网穿透-Terraria服务器","slug":"内网穿透-Terraria服务器","date":"2023-01-10T05:39:02.000Z","updated":"2023-05-26T11:15:04.000Z","comments":true,"path":"2023/01/10/内网穿透-Terraria服务器/","link":"","permalink":"https://g-haoyu.top/2023/01/10/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-Terraria%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"","text":"内网穿透什么是内网穿透？ 内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。下面就相互通信的主机在网&gt;络中与 NAT 设备的相对位置介绍内网穿透方法。UDP 内网穿透的实质是利用路由器上的NAT 系统。NAT 是一种将私有（保留）地址转化为合法IP地址的转换技术，它被广泛应用于各种类型 Internet 接入方式和各种类型&gt;的网络中。NAT可以完成重用地址，并且对于内部的网络结构可以实现对外隐蔽。(摘自百度) 说白了就是可以从远程服务器访问你的电脑。 如何实现？这里我推荐一个内网穿透软件，免费稳定。sakura frp这里用Terraria服务器作为演示（不仅可以用作游戏服务器，网站、远程桌面也可以） 首先你需要注册一个樱花穿透的账号，这里不多做演示，但是注册后需要实名认证，api要花费一元钱接下来下载樱花穿透的客户端启动器然后在樱花穿透网页的首页中点击查看访问密钥，并把访问密钥复制到启动器中登录接下来在启动器中添加隧道，填入本地ip（127.0.0.1）、Terraria服务器的端口（默认为7777）、隧道名称及描述和穿透节点即可。恭喜，到这里你就完成了，远程ip与端口可以在启动器-日志中看见。 官方文档最后把樱花穿透的帮助文档放在这里文档入口遇到问题可以在那里找到答案。","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"https://g-haoyu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"网络","slug":"网络","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%BB%9C/"},{"name":"Terraria","slug":"Terraria","permalink":"https://g-haoyu.top/tags/Terraria/"},{"name":"软件推荐","slug":"软件推荐","permalink":"https://g-haoyu.top/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"}]},{"title":"网站重写计划 - 新网站上线啦","slug":"网站重写计划","date":"2023-01-09T22:53:28.000Z","updated":"2023-03-08T07:53:34.000Z","comments":true,"path":"2023/01/10/网站重写计划/","link":"","permalink":"https://g-haoyu.top/2023/01/10/%E7%BD%91%E7%AB%99%E9%87%8D%E5%86%99%E8%AE%A1%E5%88%92/","excerpt":"","text":"网站重写计划重新上线鸽了有一年的时间了，终于有时间打理这里了 花了一下午，把以前的内容全删了，换上了Hexo框架期间并不顺利，遇到了git抽风，github 404，netlify无法访问，各种奇葩错误：Failing build: Failed to prepare repo等查了好多文档，有的问题到现在也没解决。 以后的计划多写文章多喝热水多多读书多多维护……","categories":[],"tags":[{"name":"网站","slug":"网站","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%AB%99/"}]}],"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://g-haoyu.top/tags/python/"},{"name":"网站","slug":"网站","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%AB%99/"},{"name":"音乐","slug":"音乐","permalink":"https://g-haoyu.top/tags/%E9%9F%B3%E4%B9%90/"},{"name":"日常","slug":"日常","permalink":"https://g-haoyu.top/tags/%E6%97%A5%E5%B8%B8/"},{"name":"服务器","slug":"服务器","permalink":"https://g-haoyu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"网络","slug":"网络","permalink":"https://g-haoyu.top/tags/%E7%BD%91%E7%BB%9C/"},{"name":"api","slug":"api","permalink":"https://g-haoyu.top/tags/api/"},{"name":"浏览器","slug":"浏览器","permalink":"https://g-haoyu.top/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"软件推荐","slug":"软件推荐","permalink":"https://g-haoyu.top/tags/%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"},{"name":"linux","slug":"linux","permalink":"https://g-haoyu.top/tags/linux/"},{"name":"Arch","slug":"Arch","permalink":"https://g-haoyu.top/tags/Arch/"},{"name":"git","slug":"git","permalink":"https://g-haoyu.top/tags/git/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://g-haoyu.top/tags/Ubuntu/"},{"name":"Windows","slug":"Windows","permalink":"https://g-haoyu.top/tags/Windows/"},{"name":"hexo","slug":"hexo","permalink":"https://g-haoyu.top/tags/hexo/"},{"name":"giscus","slug":"giscus","permalink":"https://g-haoyu.top/tags/giscus/"},{"name":"腾讯会议","slug":"腾讯会议","permalink":"https://g-haoyu.top/tags/%E8%85%BE%E8%AE%AF%E4%BC%9A%E8%AE%AE/"},{"name":"木鱼","slug":"木鱼","permalink":"https://g-haoyu.top/tags/%E6%9C%A8%E9%B1%BC/"},{"name":"小游戏","slug":"小游戏","permalink":"https://g-haoyu.top/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"name":"Terraria","slug":"Terraria","permalink":"https://g-haoyu.top/tags/Terraria/"}]}